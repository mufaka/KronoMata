@model KronoMata.Web.Models.GlobalSettingsViewModel

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h3 class="card-title">Global Configuration</h3>
                </div>
                <div class="card-body">
                    <div id="settings-grid"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section styles {
    <link rel="stylesheet" href="~/plugins/jsgrid/jsgrid.min.css">
    <link rel="stylesheet" href="~/plugins/jsgrid/jsgrid-theme.min.css">
}

@section scripts {
    <script src="~/plugins/jsgrid/jsgrid.min.js"></script>

    <script type="text/javascript">
        $(function () {
            populateSettingsGrid();
        });

        function populateSettingsGrid() {
            $("#settings-grid").jsGrid({
                height: "400px",
                width: "100%",

                filtering: false,
                inserting: true,
                editing: true,
                sorting: true,

                paging: true,

                autoload: true,

                pageSize: 25,
                pageButtonCount: 5,
                pageLoading: false,



                deleteConfirm: "Are you sure you want to delete this configuration?",

                loadIndicator: function (config) {
                    return {
                        show: function () {
                            console.log("loading started: " + config.message);
                        },
                        hide: function () {
                            console.log("loading finished");
                        }
                    };
                },

                controller: {
                    loadData: function (filter) {
                        return $.ajax({
                            cache: false,
                            type: "GET",
                            url: "@Url.Action("GetGlobalSettingsData", "GlobalSettings")",
                            data: filter,
                            dataType: "json"
                        });
                    },

                    insertItem: function (item) {
                        return $.ajax({
                            type: "POST",
                            url: "@Url.Action("SaveGlobalSettings", "GlobalSettings")",
                            data: item
                        });
                    },

                    updateItem: function (item) {
                        return $.ajax({
                            type: "POST",
                            url: "@Url.Action("UpdateGlobalSettings", "GlobalSettings")",
                            data: item
                        });
                    },

                    deleteItem: function (item) {
                        return $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeleteGlobalSettings", "GlobalSettings")",
                            data: item
                        });
                    }
                },

                rowClass: function (item, ndx) {
                    return item.IsSystemConfiguration ? "row-system-configuration" : "";
                },

                fields: [
                    { name: "Id", title: "ID", type: "text", visible: true, editing: false, inserting: false, sorter: "number" },
                    { 
                        name: "Category", 
                        title: "Category", 
                        type: "text", 
                        width: 150,
                        validate: "required"
                    },
                    { 
                        name: "Name", 
                        title: "Name", 
                        type: "text", 
                        width: 50, 
                        filtering: false,
                        validate: "required"
                    },
                    { 
                        name: "Value", 
                        title: "Value", 
                        type: "text", 
                        width: 200,
                        itemTemplate: function(value, item) {
                            return item.IsMasked ? item.Value.replace(/./g, '*') : item.Value;
                        }
                    },
                    { name: "IsAccessibleToPlugins", title: "Accessible?", type: "checkbox" },
                    { name: "IsMasked", title: "Masked?", type: "checkbox" },
                    { type: "control" }
                ]
            });

            jsGrid.setDefaults("control", {
                _createDeleteButton: function (item) {
                    if (item.IsSystemConfiguration) return;

                    return this._createGridButton(this.deleteButtonClass, this.deleteButtonTooltip, function (grid, e) {
                        grid.deleteItem(item);
                        e.stopPropagation();
                    });
                }
            });
        }
    </script>
}