@model KronoMata.Web.Models.ConfigureScheduledJobViewModel

<script type="text/javascript">
    var initFunctions = [];
</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">@Model.ScheduledJob.Name Configuration</h3>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-4">
                            <form action="@Url.Action("SaveConfiguration", "ScheduledJob")" method="post" class="jobconfig-form">
                                <input type="hidden" name="scheduledjob-id" value="@Model.ScheduledJob.Id" />
                                @for (int x = 0; x < Model.ConfigurationValues.Count; x++)
                                {
                                    @await Component.InvokeAsync("JobConfig", new { configurationValue = Model.ConfigurationValues[x] })
                                }
                            </form>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    @if (Model.ScheduledJob.Id > 0)
                    {
                        <input type="button" onclick="submitForm();" class="btn btn-secondary" value="Save" />
                    }
                    <input type="button" onclick="history.back();" class="btn btn-secondary" value="Cancel" />
                </div>
            </div>
        </div>
    </div>
</div>

@section styles {
    <link rel="stylesheet" href="~/plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="~/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
    <link rel="stylesheet" href="~/plugins/tempusdominus/css/tempusdominus-bootstrap-4.min.css">
}

@section scripts {
    <script src="~/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/plugins/moment/moment.min.js"></script>
    <script src="~/plugins/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

    <script type="text/javascript">
        $(function () {
            initFunctions.forEach((initFunction) => {
                initFunction.call();
            });
        });

        function submitForm() {
            var data = {
                scheduledJobId: @Model.ScheduledJob.Id,
                pluginConfigValues: []
            };

            $(".jobconfig-form").serializeArray().map(function (x) {
                if (x.name.startsWith('config-') || x.name.startsWith('configcheck-')) {

                    let tokenized = x.name.split("-");
                    let dataValue = x.value;

                    if (x.name.startsWith('configcheck-')) {
                        dataValue = x.value == 'on' ? 'True' : 'False';
                    }

                    let configValue = {
                        pluginConfigurationId: tokenized[1],
                        configurationValueId: tokenized[2],
                        value: dataValue
                    }

                    data.pluginConfigValues.push(configValue);
                }
            });

            var actionUrl = $(".jobconfig-form").attr("action");

            PostData(actionUrl, data,
                success = function (response) {
                    location.href = '@Url.Action("Index", "ScheduledJob")';
                },
                error = function (req) {
                    if (req.status == '422') {
                        showValidationErrors(JSON.parse(req.responseText), '');
                    }
                }
            );
        }
    </script>
}