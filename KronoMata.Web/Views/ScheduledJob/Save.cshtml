@model KronoMata.Web.Models.ScheduledJobSaveViewModel 

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Scheduled Job</h3>
                </div>
                <div class="card-body">
                    <form action="@Model.ActionUrl" method="post" class="scheduledjob-form">
                        <input type="hidden" name="scheduledjob-id" value="@Model.ScheduledJob.Id" />

                        <div class="row">
                            <div class="col-sm-3">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Name</label>
                                            <input type="text" class="form-control" value="@Model.ScheduledJob.Name" name="scheduledjob-name" id="scheduledjob-name">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Description</label>
                                            <textarea class="form-control" rows="1" name="scheduledjob-description" id="scheduledjob-description">@Model.ScheduledJob.Description</textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Host</label>
                                            <select class="form-control" name="scheduledjob-hostId" id="scheduledjob-hostId">
                                                @foreach (var host in Model.Hosts)
                                                {
                                                    var selected = Model.ScheduledJob.HostId == host.Id;
                                                    <option value="@host.Id" selected="@selected">@host.MachineName</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Plugin</label>
                                            <select class="form-control" name="scheduledjob-pluginMetaDataId" id="scheduledjob-pluginMetaDataId">
                                                @foreach (var plugin in Model.Plugins)
                                                {
                                                    var selected = Model.ScheduledJob.PluginMetaDataId == plugin.Id;
                                                    <option value="@plugin.Id" selected="@selected">@plugin.Name @plugin.Version</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Start Date / Time</label>
                                            <div class="input-group date" id="schedule-start-time" data-target-input="nearest">
                                                <input type="text" class="form-control datetimepicker-input" data-target="#schedule-start-time" value="@Model.ScheduledJob.StartTime" name="scheduledjob-startTime" id="scheduledjob-startTime">
                                                <div class="input-group-append" data-target="#schedule-start-time" data-toggle="datetimepicker">
                                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>End Date / Time</label>
                                            <div class="input-group date" id="schedule-end-time" data-target-input="nearest">
                                                <input type="text" class="form-control datetimepicker-input" data-target="#schedule-end-time" value="@Model.ScheduledJob.EndTime" name="scheduledjob-endTime" id="scheduledjob-endTime">
                                                <div class="input-group-append" data-target="#schedule-end-time" data-toggle="datetimepicker">
                                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-check">
                                            @{
                                                var isChecked = Model.ScheduledJob.IsEnabled;
                                            }
                                            <input type="checkbox" class="form-check-input" name="scheduledjob-isEnabled" id="scheduledjob-isEnabled" checked="@isChecked">
                                            <label class="form-check-label" for="scheduledjob-isEnabled">Is Enabled?</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Frequency</label>
                                            <select class="form-control" name="scheduledjob-frequency" id="scheduledjob-frequency">
                                                @foreach (var frequency in Model.Frequencies)
                                                {
                                                    var selected = (int)Model.ScheduledJob.Frequency == frequency.Value;
                                                    <option value="@frequency.Value" selected="@selected">@frequency.Name</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Interval</label>
                                            <input type="text" class="form-control" value="@Model.ScheduledJob.Interval" name="scheduledjob-interval" id="scheduledjob-interval">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Days</label>
                                            <select hidden class="form-control select2bs4" multiple="multiple" style="width: 100%" name="scheduledjob-days" id="scheduledjob-days">
                                                @for(int x = 1; x < 32; x++)
                                                {
                                                    var selected = String.IsNullOrEmpty(Model.ScheduledJob.Days) ? false : Model.ScheduledJob.Days.Split(",".ToCharArray()).Contains(x.ToString());
                                                    <option value="@(x)" selected="@selected">@(x)</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Hours</label>
                                            <select hidden class="form-control select2bs4" multiple="multiple" style="width: 100%" name="scheduledjob-hours" id="scheduledjob-hours">
                                                @for (int x = 1; x < 24; x++)
                                                {
                                                    var selected = String.IsNullOrEmpty(Model.ScheduledJob.Hours) ? false : Model.ScheduledJob.Hours.Split(",".ToCharArray()).Contains(x.ToString());
                                                    <option value="@(x)" selected="@selected">@(x)</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Minutes</label>
                                            <select hidden class="form-control select2bs4" multiple="multiple" style="width: 100%" name="scheduledjob-minutes" id="scheduledjob-minutes">
                                                @for (int x = 1; x < 60; x++)
                                                {
                                                    var selected = String.IsNullOrEmpty(Model.ScheduledJob.Minutes) ? false : Model.ScheduledJob.Minutes.Split(",".ToCharArray()).Contains(x.ToString());
                                                    <option value="@(x)" selected="@selected">@(x)</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Days of Week</label>
                                            <select hidden class="form-control select2bs4" multiple="multiple" style="width: 100%" name="scheduledjob-daysOfWeek" id="scheduledjob-daysOfWeek">
                                                @{
                                                    var daysOfWeekList = new List<string>() { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };
                                                }
                                                @foreach(string dayOfWeek in daysOfWeekList)
                                                {
                                                    var selected = String.IsNullOrEmpty(Model.ScheduledJob.DaysOfWeek) ? false : Model.ScheduledJob.DaysOfWeek.Split(",".ToCharArray()).Contains(dayOfWeek);
                                                    <option value="@(dayOfWeek)" selected="@selected">@(dayOfWeek)</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="card-footer">
                    <input type="button" onclick="submitForm();" class="btn btn-secondary" value="Save" />
                    @if(Model.ScheduledJob.Id > 0)
                    {
                        <input type="button" onclick="redirectToConfigure(@Model.ScheduledJob.Id);" class="btn btn-secondary" value="Configure" />
                    }
                    <input type="button" onclick="history.back();" class="btn btn-secondary" value="Cancel" />
                </div>
            </div>
        </div>
    </div>
</div>

@section styles {
    <link rel="stylesheet" href="~/plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="~/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
    <link rel="stylesheet" href="~/plugins/tempusdominus/css/tempusdominus-bootstrap-4.min.css">
}

@section scripts {
    <script src="~/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/plugins/moment/moment.min.js"></script>
    <script src="~/plugins/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>

    <script type="text/javascript">
        $(function () {
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            $('#schedule-start-time').datetimepicker({ icons: { time: 'far fa-clock' }, sideBySide: true });
            $('#schedule-end-time').datetimepicker({ icons: { time: 'far fa-clock' }, sideBySide: true });
        });

        function redirectToConfigure(scheduledJobId) {
            location.href = '@Url.Action("Configure", "ScheduledJob")/' + scheduledJobId;
        }

        function submitForm() {
            var data = {};
            $(".scheduledjob-form").serializeArray().map(function (x) {
                if (x.name.startsWith('scheduledjob-')) {
                    let dataKey = x.name.substring(x.name.indexOf('-') + 1);
                    let dataValue = x.value;

                    if (dataKey === 'isEnabled') {
                        dataValue = dataValue == 'on' ? true : false;
                    }

                    if (data[dataKey]) {
                        data[dataKey] += ',' + dataValue;
                    } else {
                        data[dataKey] = dataValue;
                    }
                }
            }); 
            
            var actionUrl = $(".scheduledjob-form").attr("action");

            PostData(actionUrl, data, 
                success = function (response) {

                    if (response.redirect === 'configure') {
                        location.href = '@Url.Action("Configure", "ScheduledJob")/' + response.id;
                    }
                    else {
                        location.href = '@Url.Action("Index", "ScheduledJob")';
                    }
                },                
                error = function (req) {
                    if (req.status == '422') {
                        showValidationErrors(JSON.parse(req.responseText), 'scheduledjob-');
                    }
                }
            );
        }
    </script>
}