@model KronoMata.Web.Models.HostViewModel 

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Hosts</h3>
            </div>
            <div class="card-body table-responsive p-0" style="height: @(Model.Hosts.Count > 10 ? "350" : "200")px;">
                <div class="host-container">
                    @foreach(var host in Model.Hosts)
                    {
                        var bgClass = host.IsEnabled ? "bg-info" : "bg-gray";

                        <div class="host-item @bgClass">
                            <div class="inner">
                                <p>@host.MachineName</p>
                            </div>
                            <div class="icon">
                                <i class="fas fa-server"></i>
                            </div>
                            <a onclick="showHostInfo(@host.Id);" href="#" class="host-item-footer">
                                More info <i class="fas fa-arrow-circle-right"></i>
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<div id="host-information">
    <div class="row">
        <div class="col-4">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Host</h3>
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="host-machinename">Machine Name</label>
                        <input type="text" class="form-control" id="host-machinename" disabled>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="host-enabled">
                        <label class="form-check-label" for="host-enabled">Enabled?</label>
                    </div>
                </div>
                <div class="card-footer">
                    <input type="button" class="btn btn-secondary" value="Save" />
                </div>
            </div>
        </div>
        <div class="col-8">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">History</h3>
                </div>
                <div class="card-body">
                    <div id="job-history-grid"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Scheduled Jobs</h3>
                </div>
                <div class="card-body">
                    <div id="scheduled-job-grid"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section styles {
    <link rel="stylesheet" href="~/plugins/jsgrid/jsgrid.min.css">
    <link rel="stylesheet" href="~/plugins/jsgrid/jsgrid-theme.min.css">
    <link rel="stylesheet" href="~/plugins/jquery-ui/jquery-ui.css" />

    <style>
        .host-container {
            padding: 1em;
            display: grid;
            grid-gap: .5em;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        }

        .host-item {
            border-radius: 0.25rem;
            box-shadow: 0 0 1px rgba(0, 0, 0, 0.125), 0 1px 3px rgba(0, 0, 0, 0.2);
            display: block;
            position: relative;

            font-size: .7em;
        }

        .host-item > .inner {
            padding: 5px;
        }

        .host-item > .host-item-footer {
            background-color: rgba(0, 0, 0, 0.1);
            color: rgba(255, 255, 255, 0.8);
            display: block;
            padding: 3px 0;
            position: relative;
            text-align: center;
            text-decoration: none;
            z-index: 10;
        }

        .host-item > .host-item-footer:hover {
            background-color: rgba(0, 0, 0, 0.15);
            color: #fff;
        }

        .host-item h3 {
            font-size: 2.2rem;
            font-weight: 700;
            margin: 0 0 10px;
            padding: 0;
            white-space: nowrap;
        }

        .host-item .icon {
            color: rgba(0, 0, 0, 0.15);
            z-index: 0;
        }

        .host-item .icon > i {
            font-size: 90px;
            position: absolute;
            right: 15px;
            top: 15px;
            transition: -webkit-transform 0.3s linear;
            transition: transform 0.3s linear;
            transition: transform 0.3s linear, -webkit-transform 0.3s linear;
        }

        .host-item .icon > i.fa, .host-item .icon > i.fas, .host-item .icon > i.far, .host-item .icon > i.fab, .host-item .icon > i.fal, .host-item .icon > i.fad, .host-item .icon > i.ion {
            font-size: 40px;
            top: 20px;
        }
    </style>
}

@section scripts {
    <script src="~/plugins/jsgrid/jsgrid.min.js"></script>
    <script src="~/plugins/jquery-ui/jquery-ui.min.js"></script>

    <script type="text/javascript">
        var _hostId = -2;
        var _host;

        $(function () {
            customizeGridLoadParams();
            $("#host-information").hide();
        });

        function showHostInfo(hostId) {
            _hostId = hostId;
            $("#host-information").show();
            populateHostInfo(hostId);
        }

        function populateHostInfo(hostId) {
            var db = GetData('@Url.Action("GetHostRelatedData", "Host")', { hostId: hostId })[0];
            var jobs = db.data.value.jobs;
            _host = db.data.value.host;

            $("#host-machinename").val(_host.machineName);
            $("#host-enabled").prop('checked', _host.isEnabled);
            populateScheduledJobs(jobs);
            populateJobHistory(hostId);
        }

        function populateScheduledJobs(jobs) {
            $("#scheduled-job-grid").jsGrid({
                height: "200px",
                width: "100%",

                sorting: false,
                paging: false,

                data: jobs,

                fields: [
                    { name: "name", title: "Name", type: "text"},
                    { name: "isEnabled", title: "Enabled?", type: "checkbox"},
                    { name: "startTime", title: "Start", type: "text" },
                    { name: "endTime", title: "End", type: "text" },
                    { name: "frequency", title: "Frequency", type: "text", 
                        itemTemplate: function (value, item) {
                            switch (item.frequency) {
                                case 0: return 'Minute';
                                case 1: return 'Hour';
                                case 2: return 'Day';
                                case 3: return 'Week';
                                case 4: return 'Month';
                                default: return 'Unknown';
                            }
                        }
                    },
                    { name: "interval", title: "Interval", type: "text"},
                    { name: "days", title: "Days", type: "text"},
                    { name: "dayOfWeeks", title: "Days of Week", type: "text"},
                    { name: "hours", title: "Hours", type: "text"},
                    { name: "minutes", title: "Minutes", type: "text"},
                ]
            });
        }

        // Will this affect the other grid?
        function customizeGridLoadParams() {
            jsGrid.loadStrategies.PageLoadingStrategy.prototype.loadParams = function () {
                var grid = this._grid;
                return {
                    pageIndex: grid.option("pageIndex"),
                    pageSize: grid.option("pageSize"),
                    hostId: getSelectedHost()
                };
            }
        }

        function getSelectedHost() {
            return _hostId;
        }

        function populateJobHistory(hostId) {
            var db = GetData('@Url.Action("GetLastJobHistoryRelatedData", "ChartData")')[0];
            var jobs = db.data.value.jobs;
            var hosts = db.data.value.hosts;

            $('#job-history-grid').jsGrid({
                height: "400px",
                width: "100%",
                sorting: false,
                paging: true,
                pageLoading: true,
                pageSize: 50,
                autoload: true,
                filtering: true,

                rowClick: function (args) {
                    showDetailsDialog(args.item);
                },

                controller: {
                    loadData: function (filter) {
                        return $.ajax({
                            cache: false,
                            type: "GET",
                            url: "@Url.Action("GetJobHistoryData", "JobHistory")",
                            data: filter,
                            dataType: "json"
                        });
                    },

                    insertItem: function (item) {
                    },

                    updateItem: function (item) {
                    },

                    deleteItem: function (item) {
                    }
                },
                fields: [
                    {
                        name: "runTime", title: "Run Time", type: "text", width: 40, filtering: false,
                        itemTemplate: function (value, item) {
                            let icon = 'fa-check-circle';
                            let iconClass = 'status-icon-success';

                            switch (item.status) {
                                case 1:
                                    icon = 'fa-pause-circle';
                                    iconClass = 'status-icon-skip';
                                    break;
                                case 2:
                                    icon = 'fa-exclamation-circle';
                                    iconClass = 'status-icon-fail';
                                    break;
                            }

                            let date = new Date(value).toLocaleString('en-US');

                            return '<i class="fa ' + icon + ' ' + iconClass + '"></i>' + date;
                        }
                    },
                    { name: "duration", title: "Duration", type: "text", width: 40, filtering: false },
                    {
                        name: "scheduledJobId", title: "Job", type: "select", items: jobs, valueField: "id", textField: "name", width: 40, headercss: "text-start",
                        filtering: false
                    },
                    {
                        name: "hostId", title: "Host", type: "select", items: hosts, valueField: "id", textField: "machineName", width: 40,
                        filtering: false
                    },
                    { name: "message", title: "Message", type: "text", filtering: false },
                    { name: "detail", title: "Detail", type: "text", filtering: false, visible: false }
                ]
            });
        }
    </script>

    <partial name="~/Views/Partials/_JobHistoryDetailDialog.cshtml" />
}