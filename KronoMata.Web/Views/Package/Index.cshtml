@model KronoMata.Web.Models.PackageViewModel

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Packages</h3>
                </div>
                <div class="card-body table-responsive p-0">
                    <div id="package-grid"></div>
                </div>
           </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Upload Package</h3>
                    </div>
                    <form id="dropzoneform" class="dropzone" action="@Url.Action("Index", "Package")">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="previews"></div>
                                    <i class="fa fa-asterisk"></i>
                                    <label for="packageName">Package Name</label>
                                    <input type="text" class="form-control" id="packageName" name="packageName">
                                </div>
                            </div>
                        </div>
                    </form>
                    <div class="card-footer">
                        <button id="update-button" type="button" onclick="doUpload();" class="btn btn-secondary">Upload</button>
                    </div>
            </div>
        </div>
    </div>
</div>

@section styles {
    <link rel="stylesheet" href="~/plugins/jsgrid/jsgrid.min.css">
    <link rel="stylesheet" href="~/plugins/jsgrid/jsgrid-theme.min.css">
    <link href="~/plugins/dropzone/dropzone_6-beta-1.css" rel="stylesheet" type="text/css" />
}

@section scripts {
    <script src="~/plugins/jsgrid/jsgrid.min.js"></script>
    <script src="~/plugins/dropzone/dropzone_6-beta-1-min.js"></script>

    <script type="text/javascript">

        var dropZoneUpload;

        $(function () {
            initializeDropzone();
            populatePackages();
        });

        function populatePackages() {
            $("#package-grid").jsGrid({
                height: "500px",
                width: "100%",

                filtering: false,
                inserting: false,
                editing: true,
                sorting: true,
                paging: false,
                autoload: true,
                pageLoading: false,

                deleteConfirm: "This will delete all related data. Are you sure you want to delete this package?",

                controller: {
                    loadData: function (filter) {
                        return $.ajax({
                            cache: false,
                            type: "GET",
                            url: "@Url.Action("GetPackageData", "Package")",
                            data: filter,
                            dataType: "json"
                        });
                    },

                    insertItem: function (item) {
                    },

                    updateItem: function (item) {
                    },

                    deleteItem: function (item) {
                        return $.ajax({
                            type: "POST",
                            url: "@Url.Action("DeletePackage", "Package")",
                            data: item
                        });
                    }
                },

                fields: [
                    { name: "Id", title: "ID", type: "text", filtering: false, width: 20, editing: false },
                    { name: "Name", title: "Name", type: "text", filtering: false, editing: false },
                    { name: "FileName", title: "File Name", type: "text", filtering: false, editing: false },
                    {
                        name: "UploadDate", title: "Upload Date", type: "text", width: 40, filtering: false, editing: false,
                        itemTemplate: function (value, item) {
                            return new Date(value).toLocaleString('en-US');
                        }
                    },
                    { type: "control", editButton: false }
                ]
            });

            jsGrid.setDefaults("control", {
                _createDeleteButton: function (item) {
                    if (item.IsSystemConfiguration) return;

                    return this._createGridButton(this.deleteButtonClass, this.deleteButtonTooltip, function (grid, e) {
                        grid.deleteItem(item);
                        e.stopPropagation();
                    });
                }
            });
        }


        function doUpload() {

            if (dropZoneUpload.getAcceptedFiles().length > 0) {
                dropZoneUpload.processQueue();
                //$("#packageName").val("");
            }
            else {
                alert('You must choose a file to upload.');
            }
        }

        function initializeDropzone() {
            dropZoneUpload = new Dropzone(".dropzone", {
                init: function () {
                    this.on("complete", function (file) {
                        if (file.status == Dropzone.SUCCESS) {
                            this.removeFile(file);
                            if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                                window.location.href = '@Url.Action("Index", "Plugin")';
                            }
                        }
                    });

                    this.on("error", function (file, response) {
                        if (typeof response == "object") {
                            alert(response.error);
                        }
                    });
                },
                url: "@Url.Action("Index", "Package")",
                autoProcessQueue: false,
                maxFiles: 1,
                acceptedFiles: ".zip",
                addRemoveLinks: true,
                dictDefaultMessage: "Drop your zip file here or click to upload",
                dictFallbackMessage: "Your browser does not support drag & drop feature.",
                dictInvalidFileType: "Your uploaded file type is not supported.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Cancel Upload",
                dictRemoveFile: "Remove"
            });
        }
    </script>
}