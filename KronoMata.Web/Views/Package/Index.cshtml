@model KronoMata.Web.Models.PackageViewModel

<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Packages</h3>
                </div>
                <div class="card-body table-responsive p-0" style="height: 300px;">
                    <table class="table table-head-fixed table-hover text-nowrap">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Filename</th>
                                <th>Upload Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach(var package in Model.Packages)
                            {
                                <tr>
                                    <td>@package.Id</td>
                                    <td>@package.Name</td>
                                    <td>@package.FileName</td>
                                    <td>@package.UploadDate.ToString("O")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Upload Package</h3>
                    </div>
                    <form id="dropzoneform" class="dropzone" action="@Url.Action("Index", "Package")">
                        <div class="card-body">
                            <div class="previews"></div>

                            <label for="packageName">Package Name</label>
                            <input type="text" class="form-control" id="packageName" name="packageName">
                        </div>
                    </form>
                    <div class="card-footer">
                        <button id="update-button" type="button" onclick="doUpload();" class="btn btn-secondary">Upload</button>
                    </div>
            </div>
        </div>
    </div>
</div>

@section styles {
    <link href="~/plugins/dropzone/dropzone_6-beta-1.css" rel="stylesheet" type="text/css" />
}

@section scripts {
    <script src="~/plugins/dropzone/dropzone_6-beta-1-min.js"></script>

    <script type="text/javascript">

        var dropZoneUpload;

        $(function () {
            initializeDropzone();
        });

        function doUpload() {

            if (dropZoneUpload.getAcceptedFiles().length > 0) {
                dropZoneUpload.processQueue();
                //$("#packageName").val("");
            }
            else {
                alert('You must choose a file to upload.');
            }
        }

        function initializeDropzone() {
            dropZoneUpload = new Dropzone(".dropzone", {
                init: function () {
                    this.on("complete", function (file) {
                        if (file.status == Dropzone.SUCCESS) {
                            this.removeFile(file);
                            if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                                window.location.href = '@Url.Action("Index", "Plugin")';
                            }
                        }
                    });

                    this.on("error", function (file, response) {
                        if (typeof response == "object") {
                            alert(response.error);
                        }
                    });
                },
                url: "@Url.Action("Index", "Package")",
                autoProcessQueue: false,
                maxFiles: 1,
                acceptedFiles: ".zip",
                addRemoveLinks: true,
                dictDefaultMessage: "Drop your zip file here or click to upload",
                dictFallbackMessage: "Your browser does not support drag & drop feature.",
                dictInvalidFileType: "Your uploaded file type is not supported.",
                dictResponseError: "Server responded with {{statusCode}} code.",
                dictCancelUpload: "Cancel Upload",
                dictRemoveFile: "Remove"
            });
        }
    </script>
}